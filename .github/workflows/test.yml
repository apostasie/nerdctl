name: test

on:
  push:
    branches:
      - main
      - 'release/**'
  pull_request:

env:
  GO_VERSION: 1.22.x

jobs:
  # This is the build stage producing the core integration test image (eg: all dependencies)
  test-integration-build:
    runs-on: "ubuntu-24.04"
    timeout-minutes: 60
    env:
      CONTAINERD_VERSION: "${{ matrix.containerd }}"

    strategy:
      fail-fast: false
      matrix:
        include:
          - containerd: v1.6.32
          - containerd: v1.7.17
          - containerd: main

    steps:
      - uses: actions/checkout@v4.1.6
        with:
          fetch-depth: 1

      - name: "Prepare cache key"
        run: |
          echo "CACHE_DAY=$(date --rfc-3339=date)" >> "$GITHUB_ENV"

      # Load persistent image cache
      - name: "Load persistent cache"
        id: cache-load
        uses: actions/cache/restore@v4
        with:
          path:
            ~/images-cache
          key:
            # Cache strategy:
            # - any version of containerd has a different cache key
            # - cache key will change (eg: cache will be invalidated) if:
            #   - Dockerfile, or any Dockerfile.d/* file is being changed
            #   - we are not the same day
            # That means that containerd main will be at max one day old
            # Obviously also means we are rebuilding everything once a day, including stuff that has not changed - trade of
            key-build-artifacts-${{ hashFiles('Dockerfile') }}-${{ hashFiles('Dockerfile.d/**') }}-${{ env.CONTAINERD_VERSION }}-${{ env.CACHE_DAY }}

      - name: "Build dependencies"
        run: |
          ls -lA ~/images-cache || {
            echo "No cache"
          }
          mkdir -p "$HOME"/images-cache
          tarpath="$HOME"/images-cache/dependencies-build.tar
          # If we do not have a prebuilt image, build it, tar it
          [ -e "$tarpath" ] || {
            DOCKER_BUILDKIT=1 docker build \
              -t prebuilt \
              --target build-all-dependencies \
              --build-arg CONTAINERD_VERSION="$CONTAINERD_VERSION" .
            docker save prebuilt > "$tarpath"
          }

      # If we had no cache hit at the restore stage, then store the image in the cache, otherwise, do nothing
      - name: "Save persistent cache"
        if: ${{ steps.cache-load.outputs.cache-hit != 'true' }}
        id: cache-save
        uses: actions/cache/save@v4
        with:
          path:
            ~/images-cache
          key:
            ${{ steps.cache-load.outputs.cache-primary-key }}

      # In any case, upload it (overwrite) as an artifact for the next job
      - name: "Upload artifacts for next jobs"
        uses: actions/upload-artifact@v4
        with:
          name: dependencies-${{ env.CONTAINERD_VERSION }}
          overwrite: true
          path:
            ~/images-cache/dependencies-build.tar

  test-integration:
    needs: test-integration-build
    runs-on: "ubuntu-${{ matrix.ubuntu }}"
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix:
        # ubuntu-20.04: cgroup v1, ubuntu-22.04: cgroup v2
        include:
          - ubuntu: 20.04
            containerd: v1.6.32
          - ubuntu: 20.04
            containerd: v1.7.17
          - ubuntu: 22.04
            containerd: v1.7.17
          - ubuntu: 22.04
            containerd: main
    env:
      UBUNTU_VERSION: "${{ matrix.ubuntu }}"
      CONTAINERD_VERSION: "${{ matrix.containerd }}"
    steps:
      - uses: actions/checkout@v4.1.6
        with:
          fetch-depth: 1
      # Get the artifact from the previous stage
      - name: "Download artifact"
        uses: actions/download-artifact@v4
        with:
          name: dependencies-${{ env.CONTAINERD_VERSION }}
          path:
            ~/images-cache
      # Build the final image (including nerdctl and on the right ubuntu), on top of the previous artifact
      - name: "Prepare integration test environment"
        run: |
          # Get from cache the prebuilt out-full stage
          ls -lA ~/images-cache || echo FAIL
          ls -lA ~/images-cache/dependencies-build.tar || echo FAIL
          docker load --input ~/images-cache/dependencies-build.tar
          DOCKER_BUILDKIT=1 docker build \
              -t test-integration \
              --target test-integration \
              --build-arg PREBUILT_DEPENDENCIES="prebuilt" \
              --build-arg UBUNTU_VERSION="$UBUNTU_VERSION" \
              --build-arg CONTAINERD_VERSION="$CONTAINERD_VERSION" .
      - name: "Remove snap loopback devices (conflicts with our loopback devices in TestRunDevice)"
        run: |
          sudo systemctl disable --now snapd.service snapd.socket
          sudo apt-get purge -y snapd
          sudo losetup -Dv
          sudo losetup -lv
      - name: "Register QEMU (tonistiigi/binfmt)"
        run: docker run --privileged --rm tonistiigi/binfmt --install all
      - name: "Run integration tests"
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 30
          max_attempts: 2
          retry_on: error
          command: |
            docker run -t --rm --privileged test-integration
            docker images
            docker inspect test-integration
            docker run -t test-integration cat /etc/issue
            docker run -t test-integration containerd --version
            docker run -t test-integration nerdctl --version
